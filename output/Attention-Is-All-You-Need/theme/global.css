:root {
    /* Quarkdown exposed properties */

    /* Colors */
    --qd-background-color: inherit; /* Background color */
    --qd-main-color: inherit; /* Main text color */
    --qd-primary-color: var(--qd-main-color); /* Primary/accent color */
    --qd-color-on-primary: var(--qd-background-color); /* Text color on primary background color */
    --qd-heading-color: var(--qd-main-color); /* Heading (titles) color */
    --qd-link-color: inherit; /* Link color */
    --qd-callout-box-header-color: var(--qd-main-color); /* Color of the header of callout box headers. This is just a referenceable value and is not used in this global theme */
    --qd-collapsed-text-color: var(--qd-link-color); /* Color of expandible text */
    --qd-error-message-collapsed-text-color: rgb(240, 246, 77); /* Color of expandible text in error messages */

    /* Fonts */
    --qd-main-font: inherit;
    --qd-main-font-size: 1em;
    --qd-code-font: monospace;
    --qd-box-heading-font: var(--qd-main-font); /* Font of box headers */
    --qd-code-span-font-size: var(--qd-main-font-size);
    --qd-code-block-font-size: var(--qd-code-span-font-size); /* Font size of code blocks in non-slides documents */
    --qd-slides-code-block-font-size: var(--qd-code-block-font-size); /* Font size of code blocks in slides documents */
    --qd-heading-font: inherit;

    /* Margins */
    --qd-block-margin: 32px; /* Margin of block elements */
    --qd-paragraph-vertical-margin: var(--qd-block-margin); /* Vertical margin of paragraphs preceded by a paragraph */
    --qd-heading-margin: 40px 0 20px 0; /* Margin of headings */
    --qd-task-checkbox-margin-right: 0.9em; /* Right margin of checkboxes in GFM task list items */
    --qd-box-margin-multiplier: 1.5; /* --qd-block-margin * this = box vertical margin */

    /* Text */
    --qd-line-height: 1.5;
    --qd-paragraph-text-indent: none; /* Paragraph indentation (with LaTeX policies) */
    --qd-location-suffix: ". "; /* Suffix for element (e.g. headings) location numbering */
    --qd-caption-label-suffix: ": "; /* Suffix for labels (e.g. Figure 1.1: ...) in captions */
    --qd-slides-horizontal-alignment: center; /* Text alignment of slides documents */
    --qd-paged-horizontal-alignment: justify; /* Text alignment of paged documents */
    /*
    Global text alignment (should not be overridden externally).
    It can equal to either --qd-pages-horizontal-alignment or --qd-slides-horizontal-alignment
    according to the current document type.
    */
    --qd-horizontal-alignment: var(--qd-paged-horizontal-alignment);

    /* Code */
    --qd-code-line-height: var(--qd-line-height); /* Line height of code blocks */
    --qd-code-border-radius: 8px; /* Border radius of code blocks */
    --qd-code-line-numbers-padding: 0 0.8em; /* Padding of line numbers of code blocks. Vertical padding also defines code line height. */
    --qd-code-line-numbers-opacity: 0.6; /* Opacity of line numbers of code blocks */

    /* Tables */
    --qd-table-default-cell-alignment: initial; /* Text alignment of table cells, if not specified */

    /* Quotes */
    --qd-quote-type-label-suffix: ": "; /* Suffix for localized quote type labels, e.g. Tip, Note, Warning, ... */
    --qd-quote-attribution-prefix: "â€” "; /* Prefix for quote attributions */
    --qd-quote-foreground-color: var(--qd-main-color);
    --qd-quote-background-color: color-mix(in srgb, var(--qd-quote-foreground-color) 5%, transparent);

    /* Boxes */
    --qd-box-border-radius: 8px;
    --qd-box-section-padding: 12px 16px; /* Padding of box sections (header and content) */
    --qd-box-icon-baseline: 0; /* Y offset of icons in box headers */

    /* Callout elements */
    --qd-callout-foreground-color: var(--qd-color-on-primary);
    --qd-callout-background-color: color-mix(in srgb, var(--qd-callout-foreground-color) 5%, transparent);
    /* Tip elements */
    --qd-tip-foreground-color: rgb(33, 102, 25);
    --qd-tip-background-color: color-mix(in srgb, var(--qd-tip-foreground-color) 5%, transparent);
    /* Note elements */
    --qd-note-foreground-color: rgb(25, 60, 102);
    --qd-note-background-color: color-mix(in srgb, var(--qd-note-foreground-color) 5%, transparent);
    /* Warning elements */
    --qd-warning-foreground-color: rgb(161, 76, 32);
    --qd-warning-background-color: color-mix(in srgb, var(--qd-warning-foreground-color) 5%, transparent);
    /* Important elements */
    --qd-important-foreground-color: rgb(145, 34, 34);
    --qd-important-background-color: color-mix(in srgb, var(--qd-important-foreground-color) 5%, transparent);
    /* Error elements */
    --qd-error-foreground-color: white;
    --qd-error-background-color: rgb(224, 67, 64);

    /* Mermaid diagrams */
    --qd-mermaid-node-background-color: var(--qd-primary-color);
    --qd-mermaid-node-border-color: var(--qd-mermaid-node-text-color);
    --qd-mermaid-node-border-width: 1px;
    --qd-mermaid-node-text-color: var(--qd-color-on-primary);
    --qd-mermaid-node-line-color: var(--qd-main-color);
    --qd-mermaid-node-filter: none;

    /* Reveal properties */
    --r-background-color: var(--qd-background-color);
    --r-main-color: var(--qd-main-color);
    --r-heading-color: var(--qd-heading-color);
    --r-link-color: var(--qd-link-color);
    --r-main-font: var(--qd-main-font);
    --r-main-font-size: var(--qd-main-font-size);
    --r-code-font: var(--qd-code-font);
    --r-heading-font: var(--qd-heading-font);
    --r-block-margin: var(--qd-block-margin);
    --r-heading-margin: var(--qd-heading-margin);

    /* Injected properties. These are injected from html-wrapper depending on the user's preferences. Here are default values. */
    --property-column-count: unset;
    --viewport-remaining-height: 50vh;

    --primary: red;
}

body {
    color: var(--qd-main-color);
    font-family: var(--qd-main-font);
    font-size: var(--qd-main-font-size);
    text-align: var(--qd-horizontal-alignment);
}

body:not(.quarkdown-paged), .quarkdown-paged .pagedjs_page {
    background-color: var(--qd-background-color);
}

body.quarkdown-plain {
    margin: 24px 20%;
    column-count: var(--property-column-count);
}

/* Slides viewport */
.quarkdown-slides {
    --qd-horizontal-alignment: var(--qd-slides-horizontal-alignment);
}

.reveal .slides > :is(section, .pdf-page) {
    text-align: var(--qd-slides-horizontal-alignment);
    column-count: var(--property-column-count);
}

/* Paged viewport */
body.quarkdown-paged {
    background-color: lightgray;
}

/* Paged rendering is loading */
body.quarkdown-paged:not(:has(.pagedjs_page)) {
    opacity: 0;
}

/* Pages area */
.pagedjs_pages {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 3mm;
}

.pagedjs_page {
    text-align: var(--qd-paged-horizontal-alignment);
    box-shadow: 0 16px 48px rgba(0, 0, 0, 0.1);
}

/* In a multi-column layout, these elements span across all columns. */
.full-column-span, h1, h2, h3, nav {
    column-span: all;
}

/* A divider in a row is vertical instead of horizontal */
.quarkdown .stack-row > hr {
    display: list-item;
    width: auto;
    margin: 0 var(--qd-block-margin);
}

.quarkdown :is(ul, ol) {
    padding-left: 20px;
}

/* Not loose. */
.quarkdown li {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
}

/* Loose. */
.quarkdown li:has(p) {
    margin-top: 1em;
    margin-bottom: 1em;
}

.quarkdown figure {
    display: flex;
    flex-direction: column;
    align-items: center;
}

.quarkdown figure > :not(figcaption) {
    order: 1;
}

.quarkdown figure > figcaption.caption-top {
    order: 0;
    margin-bottom: 0.5em;
}

.quarkdown figure > figcaption.caption-bottom {
    order: 2;
    margin-top: 0.5em;
}

.quarkdown :is(figure, .mermaid) {
    text-align: center;
}

/* Mermaid diagrams */

.quarkdown .mermaid:not([data-processed]) {
    font-size: 0;
}

.quarkdown-plain .mermaid > svg {
    max-width: 52% !important;
}

.quarkdown-paged .mermaid > svg {
    max-width: 80% !important;
    max-height: calc(var(--viewport-remaining-height)); /* Fit the diagram into the remaining space of the viewport. */
}

.quarkdown-paged figure:has(figcaption) .mermaid > svg {
    max-height: calc(var(--viewport-remaining-height) - 100px);
}

.quarkdown-slides .mermaid > svg {
    max-height: 50vh !important;
}

.quarkdown-slides .mermaid {
    box-shadow: none;
}

/* Nodes */
.quarkdown .mermaid :is(.node path, .actor, rect:not(.legend rect, .plot rect), polygon, circle):not(.background) {
    fill: var(--qd-mermaid-node-background-color) !important;
    stroke: var(--qd-mermaid-node-border-color) !important;
    stroke-width: var(--qd-mermaid-node-border-width) !important;
}

.quarkdown .mermaid :is(.node, rect:not(.legend rect, .plot rect), polygon):not(.background) {
    filter: var(--qd-mermaid-node-filter);
}

.quarkdown .mermaid .legend rect {
    stroke: var(--qd-mermaid-node-border-color) !important;
    stroke-width: var(--qd-mermaid-node-border-width) !important;
}

/* Bar chart */
.quarkdown .mermaid .plot rect {
    fill: var(--qd-link-color) !important;
    opacity: .6;
}

/* Bar chart + line chart */
.quarkdown .mermaid .plot:has(path) rect {
    opacity: .25;
}

.quarkdown .mermaid .background {
    fill: none !important;
}

/* Text in nodes */
.quarkdown .mermaid .nodeLabel {
    color: var(--qd-mermaid-node-text-color) !important;
}

/* Edge labels */
.quarkdown .mermaid :is(.edgeLabel, .edgeLabel p) {
    color: var(--qd-mermaid-node-line-color) !important;
    background-color: var(--qd-background-color) !important;
}

/* Lines */
.quarkdown .mermaid :is(.relation, line, path[class^="edge"],
                        :is(.ticks, .axis-line, .axisl-line) path) {
    stroke: var(--qd-mermaid-node-line-color) !important;
}

/* Text outside nodes */
.quarkdown .mermaid :is(.label text, .legend text, .messageText,
                        .loopText, .loopText tspan, .branchLabel text,
                        .title text, text[class*="TitleText"]) {
    fill: var(--qd-mermaid-node-line-color) !important;
}

.quarkdown .mermaid .labelBkg {
    background: none !important;
}

/* Line endings */
.quarkdown .mermaid :is(defs, .marker) path {
    stroke: var(--qd-mermaid-node-line-color) !important;
}

.quarkdown .mermaid .plot path {
    stroke-width: 3px;
}

.quarkdown .mermaid .plot .line-plot-0 path {
    stroke: var(--qd-link-color);
}

/* Blockquotes and alerts */

.quarkdown blockquote {
    display: block;
    color: var(--qd-quote-foreground-color);
    padding: var(--qd-block-margin);
}

.quarkdown blockquote:not([class]) {
    background-color: var(--qd-quote-background-color);
}

.quarkdown:not(.quarkdown-slides) blockquote {
    margin: 0;
}

/* Blockquotes with a type (e.g. tip, note, warning, ...) */
.quarkdown blockquote[class] {
    /* This can be overridden by the renderer to display a localized label for each quote type, e.g. 'Tip:' */
    --quote-type-label: "";
    font-style: normal;
    background-color: color-mix(in srgb, var(--box-header-foreground-color) 5%, transparent);
    border-color: var(--box-header-foreground-color);
    color: var(--box-content-foreground-color);
}

.quarkdown blockquote[class][data-labeled] > :first-child::before {
    content: var(--quote-type-label) var(--qd-quote-type-label-suffix);
    font-weight: bold;
    font-style: normal;
    color: var(--box-header-foreground-color);
}

.quarkdown blockquote .attribution {
    opacity: 0.6;
    display: block !important;
    margin-top: 0 !important;
}

.quarkdown blockquote .attribution::before {
    content: var(--qd-quote-attribution-prefix);
}

.quarkdown table :is(th, td):not([align]) {
    text-align: var(--qd-table-default-cell-alignment);
}

.quarkdown table:has(> caption.caption-top) {
    caption-side: top;
}

.quarkdown table:has(> caption.caption-bottom) {
    caption-side: bottom;
}

.quarkdown table > caption {
    white-space: nowrap;
    overflow-x: hidden;
}

.quarkdown table > caption.caption-top {
    margin-bottom: 1em;
}

.quarkdown table > caption.caption-bottom {
    margin-top: 1em;
}

.quarkdown hr {
    width: 100%;
}

.quarkdown a {
    color: var(--qd-link-color);
    text-decoration: none;
}

/* Math */
.katex.katex {
    font-size: 1.1em;
    margin: 0 .1em;
}

/* GFM Tasks */
.task-list-item {
    list-style-type: none;
}

.task-list-item input[type="checkbox"]:first-child {
    margin-right: var(--qd-task-checkbox-margin-right);
    transform: translateY(1px);
}

.quarkdown :is(ul, ol):has(> .task-list-item) {
    padding-left: 0;
}

/* If a list item has a custom bullet element, the actual content is wrapped in a container */
.quarkdown li:has(> div:nth-child(2)) {
    display: flex;
    align-items: flex-start;
}

/* Vertical block spacing. */
.quarkdown :is(
    table:not(code table), pre, figure, blockquote,
    hr, .stack:not(.stack .stack)
) {
    margin-top: var(--qd-block-margin);
    margin-bottom: var(--qd-block-margin);
}

.quarkdown :is(h1, h2, h3, h4, h5, h6) {
    color: var(--qd-heading-color);
    font-family: var(--qd-heading-font);
    margin: var(--qd-heading-margin);
    text-transform: none !important;
}

.quarkdown-slides section > :is(h1, h2, h3, h4, h5, h6):first-child {
    margin-top: 0;
}

.quarkdown details summary {
    cursor: pointer;
    margin-bottom: var(--qd-paragraph-vertical-margin);
}

.quarkdown.quarkdown p {
    line-height: var(--qd-line-height);
    margin-top: 0;
    margin-bottom: 0;
    text-indent: var(--qd-paragraph-text-indent);
}

/* Syllables-based word break */
.quarkdown:not(.quarkdown-slides) p {
    hyphens: auto;
}

.quarkdown p:empty {
    display: none;
}

/* Spacing between two sibling paragraphs */
p + p:not(.stack > p):not(.page-margin-content > p),
/* Spacing between two sibling paragraphs with a floating element in-between */
p + .float + p:not(.stack > p):not(.page-margin-content > p),
/* Spacing between the paragraph and its floating element sibling. */
p + .float:has(+ p:not(.stack > p):not(.page-margin-content > p)) {
    margin-top: var(--qd-paragraph-vertical-margin) !important;
}

/* Paragraph indentation cancelling */
p:first-child,
h1 + p,
h2 + p,
h3 + p,
h4 + p,
h5 + p,
h6 + p,
hr + p,
figure + p,
table + p,
details > summary + p,
.float + p,
figure p,
.stack > p,
.container[style*="text-align"] > p,
.container[style*="justify-items"] > p,
.mermaid p
{
    text-indent: 0 !important;
}

.float[style*="float: inline-start"] {
    margin-right: 1.1em;
}

.float[style*="float: inline-end"] {
    margin-left: 1.1em;
}

/* Reset the margin of the first element in a page */
.pagedjs_page_content > div > *:first-child,
.pagedjs_page_content > div > *[data-hidden]:first-child ~ *:nth-child(2) {
    margin-top: 0 !important;
}

.quarkdown code, .box.error > .box-content {
    font-family: var(--qd-code-font);
}

.quarkdown code:not(pre code) {
    font-size: var(--qd-code-span-font-size);
}

.quarkdown pre code {
    font-size: var(--qd-code-block-font-size);
    line-height: var(--qd-code-line-height);
    font-style: normal;
    max-height: none;
    overflow: hidden;
}

.quarkdown :is(pre, pre code) {
    border-radius: var(--qd-code-border-radius);
}

.quarkdown-slides pre code {
    font-size: var(--qd-slides-code-block-font-size);
}

/* Code block copy button */

.hljs-copy-container.hljs-copy-container {
    --hljs-theme-padding: 16px !important;
    transform: none;
    opacity: 0;
    transition: opacity 300ms ease;
}

.hljs-copy-wrapper:hover .hljs-copy-container {
    opacity: .8;
}

.hljs-copy-button {
    cursor: pointer;
}

/* Code block line numbers. */

.hljs-ln td {
    padding: var(--qd-code-line-numbers-padding) !important;
}

.hljs-ln-numbers {
    opacity: var(--qd-code-line-numbers-opacity);
}

/* Line numbers are displayed in a table, so no borders by default. */
.quarkdown code table :is(td, th) {
    border: 0;
}

/* When an element is marked as focused, other siblings are less visible */
code.focus-lines .hljs-ln-line:not(.focused),
:is(ol, ul):has(.focused) > li:not(.focused, :has(.focused)) {
    opacity: 0.4;
}

/* Elements that contain location data display it accordingly */
[data-location]::before {
    content: attr(data-location) var(--qd-location-suffix);
}

/* Location data in a list item replaces its marker */
.quarkdown li[data-location] {
    list-style-type: none;
}

/*
Elements that reference to a label display it accordingly.
Example: "Figure 1.1:"
*/
[data-element-label]::before {
    content: attr(data-localized-kind) " " attr(data-element-label) var(--qd-caption-label-suffix);
}

/* "Figure 1.1" instead of "Figure 1.1: " if the caption is empty */
[data-element-label]:empty {
    --qd-caption-label-suffix: "";
}

/* Container */

.container {
    display: inline-block;
}

.container.fullwidth {
    display: block;
}

.container:not(.fullwidth):not(.clip > .container) :only-child {
    margin: 0;
}

/* Stacks */

:is(.stack, .page-margin-content) > :is(p, h1, h2, h3, h4, h5, h6, figure) {
    margin: 0 !important;
}

.stack-row {
    display: flex;
    flex-direction: row;
}

.stack-column {
    display: flex;
    flex-direction: column;
}

.stack-grid {
    display: grid;
}

.stack-grid > * {
    margin: 0 !important;
}

.container > .stack {
    width: 100%;
    height: 100%;
}

/* Clipping */

.clip {
    --clip-path: none;
}

.clip > .container:not(:has(> figure)) {
    clip-path: var(--clip-path);
}

.clip > .container > figure > :not(figcaption) {
    clip-path: var(--clip-path);
}

.clip-circle {
    --clip-path: circle();
}

/* Sizes */

.size-tiny {
    font-size: 0.5em;
}

.size-small {
    font-size: 0.75em;
}

.size-normal {
    font-size: 1em;
}

.size-medium {
    font-size: 1.25em;
}

.size-larger {
    font-size: 1.5em;
}

.size-large {
    font-size: 2em;
}

.size-huge {
    font-size: 3em;
}

.codespan-content {
    display: inline-flex;
    align-items: center;
}

.color-preview {
    width: 0.5em;
    height: 0.5em;
}

.inline-collapse[data-collapsed="true"] {
    cursor: pointer;
    font-weight: bold;
    color: var(--qd-collapsed-text-color);
    border-bottom: 3px dotted color-mix(in srgb, var(--qd-collapsed-text-color) 28%, transparent);
}

.box.error .inline-collapse[data-collapsed="true"] {
    --qd-collapsed-text-color: var(--qd-error-message-collapsed-text-color);
    background-color: rgba(0, 0, 0, 0.09);
    border: none;
}

.collapsible-text[data-collapsed="true"] {
    cursor: pointer;
}

.box {
    width: 100%;
    border-radius: var(--qd-box-border-radius);
    margin-top: calc(var(--qd-box-margin-multiplier) * var(--qd-block-margin));
    margin-bottom: calc(var(--qd-box-margin-multiplier) * var(--qd-block-margin));
    --box-background-color: transparent;
    --box-content-foreground-color: var(--qd-main-color);
    --box-header-foreground-color: var(--qd-main-color);
    --box-header-background-color: color-mix(in srgb,
        var(--box-header-foreground-color) 2.5%,
        color-mix(in srgb, var(--box-background-color) 98%, rgba(0, 0, 0, .1))
    );
    background-color: var(--box-background-color);
}

.box > .box-content {
    color: var(--box-content-foreground-color);
}

.box > header {
    color: var(--box-header-foreground-color);
    background-color: var(--box-header-background-color);
    border-radius: var(--qd-box-border-radius) var(--qd-box-border-radius) 0 0;
}

.box > header p {
    margin: 0;
}

.box > header > h4 {
    color: var(--box-header-foreground-color);
    font-family: var(--qd-box-heading-font);
    margin: 0;
}

.box > header, .box > .box-content {
    padding: var(--qd-box-section-padding);
}

.box > .box-content > *:first-child,
.box > .box-content li:first-child > p:first-child {
    margin-top: 8px;
}

.box > .box-content > *:last-child,
.box > .box-content li:last-child > p:last-child {
    margin-bottom: 8px;
}

/* Lists have different spacing depending on the target */
.box > .box-content :is(ul, ol) {
    padding-left: 18px;
}

.pagedjs_page .box > .box-content :is(ul, ol) {
    padding-left: 24px;
}

.quarkdown-slides .box > .box-content :is(ul, ol) {
    padding-left: 4px;
}

/* End of the target-based styling */

/* Box (and quote) types */

.callout {
    --box-background-color: var(--qd-callout-background-color);
    --box-header-foreground-color: var(--qd-callout-foreground-color);
}

.tip {
    --box-background-color: var(--qd-tip-background-color);
    --box-header-foreground-color: var(--qd-tip-foreground-color);
}

.note {
    --box-background-color: var(--qd-note-background-color);
    --box-header-foreground-color: var(--qd-note-foreground-color);
}

.important {
    --box-background-color: var(--qd-important-background-color);
    --box-header-foreground-color: var(--qd-important-foreground-color);
}

.warning {
    --box-background-color: var(--qd-warning-background-color);
    --box-header-foreground-color: var(--qd-warning-foreground-color);;
}

.error {
    --box-background-color: var(--qd-error-background-color);
    --box-content-foreground-color: var(--qd-error-foreground-color);
    --box-header-foreground-color: var(--qd-error-foreground-color);
    --box-header-background-color: rgba(0, 0, 0, .1);
}

.box.error > .box-content {
    font-size: 0.7em;
    text-align: start;
}


/* Box icons */

.box > header > h4::before {
    font-family: 'boxicons', monospace;
    font-weight: normal;
    float: left;
    width: 18px;
    margin-right: 6px;
    margin-top: var(--qd-box-icon-baseline);
}

.box:is(.tip, .note, .warning) > header > h4 {
    margin-right: 24px; /* 18px icon + 6px margin, used to realign text to the center */
    display: flex;
    flex-direction: row;
    align-items: center; /* Align icons */
    justify-content: var(--qd-horizontal-alignment);
}

.box.tip > header > h4::before {
    content: "\ea0d"; /* 'bulb' icon */
}

.box.note > header > h4::before {
    content: "\eb21"; /* 'info' icon */
}

.box.warning > header > h4::before {
    content: "\eac5"; /* 'error' (triangle) icon */
}

/* End of box styling */

.marker {
    display: none;
}

.quarkdown pre {
    min-width: 20%;
}

.quarkdown-slides pre:not(.stack > pre) {
    min-width: 100%;
}

.stack > pre {
    width: auto;
    margin: 0;
}

.quarkdown img {
    max-width: 100%;
    max-height: 100%;
}

/* Table of contents */

.quarkdown nav {
    text-align: start;
}

.quarkdown nav ol {
    list-style-position: inside;
    margin: 0 0 0 1em;
}

.quarkdown nav ol:not(ol ol) {
    padding-left: 0;
}

/* ToC is scrollable in slides. */
.quarkdown-slides nav {
    overflow-y: scroll;
    max-height: 50vh;
}

.quarkdown h1#table-of-contents {
    text-align: start;
}

.quarkdown nav li a::after {
    /* TOC page counter on supported targets */
    content: target-counter(attr(href), page);
    float: right;
}

.quarkdown span:is(.current-page-number, .total-page-number) {
    display: inline;
}

/* Footer */

.page-margin-bottom-center, .page-margin-top-center {
    display: flex;
    width: 100%;
    justify-content: space-around;
}

:is(.page-margin-bottom-center, .page-margin-top-center) > * {
    width: 100%;
    text-align: center;
}

/* Fixed page margins */

.page-margin-content:not(.quarkdown-paged .page-margin-content) {
    /* Paged documents have dedicated areas for each margin. Others use fixed positions. */
    position: fixed;
    background-color: var(--qd-background-color);
    z-index: 9999;
}

.pagedjs_margin-left-top, .pagedjs_margin-right-top {
    display: block;
}

.page-margin-top-left-corner, .page-margin-top-left {
    top: 0;
    left: 0;
}

.page-margin-top-center {
    top: 0;
    left: 50%;
    transform: translateX(-50%);
}

.page-margin-top-right-corner, .page-margin-top-right {
    top: 0;
    right: 0;
}

.page-margin-right-top {
    top: 0;
    right: 0;
    rotate: 90deg;
    transform: translateX(50%);
}

.page-margin-right-middle {
    top: 50%;
    right: 0;
    rotate: 90deg;
    transform: translateX(-50%);
}

.page-margin-right-bottom {
    bottom: 0;
    right: 0;
    rotate: 90deg;
    transform: translateX(-50%);
}

.page-margin-bottom-right-corner, .page-margin-bottom-right {
    bottom: 0;
    right: 0;
    transform: translateX(-50%);
}

.page-margin-bottom-center {
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
}

.page-margin-bottom-left-corner, .page-margin-bottom-left {
    bottom: 0;
    left: 0;
    transform: translateX(50%);
}

.page-margin-left-bottom {
    bottom: 0;
    left: 0;
    rotate: -90deg;
    transform: translateY(-50%);
}

.page-margin-left-middle {
    top: 50%;
    left: 0;
    rotate: -90deg;
    transform: translateY(-50%);
}

.page-margin-left-top {
    top: 0;
    left: 0;
    rotate: -90deg;
    transform: translateX(-50%);
}

.pagedjs_page .page-margin-content {
    /* Removes translations from the margin content of paged documents */
    transform: none;
}

/* Experimental fix: Chrome export-to-PDF adds a colored strip to the bottom area. */
@media print {
    .pagedjs_margin, .pagedjs_margin-bottom, .pagedjs_margin-bottom-left-corner-holder, .pagedjs_margin-bottom-right-corner-holder {
        background-color: var(--qd-background-color);
    }
}

/* Navigation sidebar */

.sidebar {
    top: 50%;
    right: 0;
    transform: translateY(-50%);
    padding: 20px;
    border-radius: 5px;
    max-height: 90vh;
    overflow-y: auto;
}

.sidebar ol {
    list-style: none;
    padding: 0;
    margin: 0;
}

.sidebar li {
    margin: 0 !important;
}

.sidebar a {
    color: var(--qd-main-color);
    height: 12px;
    text-decoration: none !important;
    display: flex;
    flex-direction: row-reverse;
    justify-content: flex-start;
    align-items: center;
}

.sidebar a::before {
    content: '';
    width: 100%;
    height: 2px;
    background: var(--qd-main-color);
    opacity: 0.25;
    transition: opacity 0.3s;
}

.quarkdown-paged .sidebar a span {
    margin-right: 10px;
}

.quarkdown-paged .sidebar a::before {
    background: #444;
}

.sidebar li.h1 a::before {
    width: 30px;
    margin-left: 0;
}

.sidebar li.h2 a::before {
    width: 20px;
    margin-left: 10px;
}

.sidebar li.h3 a::before {
    width: 10px;
    margin-left: 20px;
}

.sidebar a:not(:hover) {
    color: transparent;
}

.sidebar li.active a::before {
    opacity: .75;
}

.sidebar a:hover::before {
    opacity: 1;
}

.sidebar a:hover span {
    background-color: var(--qd-background-color);
    padding: 4px 16px;
    border-radius: 8px;
}

@media print {
    .sidebar {
        display: none;
    }
}

@media screen and (min-aspect-ratio: 1.3), pagedjs-ignore {
    .sidebar {
        display: block !important;
    }
}
